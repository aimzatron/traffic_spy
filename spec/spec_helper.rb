ENV['TRAFFIC_SPY_ENV'] ||= "test"

require 'traffic_spy'

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def db
  TrafficSpy::DB
end

def clients_table
    db.from(:clients)
end

def campaigns_table
    db.from(:campaigns)
end

def campaign_events_table
    db.from(:campaign_events)
end

def events_table
    db.from(:events)
end

def ips_table
    db.from(:ips)
end

def operating_systems_table
    db.from(:operating_systems)
end

def payloads_table
    db.from(:payloads)
end

def screen_resolutions_table
    db.from(:screen_resolutions)
end

def urls_table
    db.from(:urls)
end

def web_browsers_table
    db.from(:web_browsers)
end

def delete_urls
    db["DELETE FROM urls"].delete
    db.from(:sqlite_sequence).where(name:"urls").delete
end

def delete_campaign_events
    db["DELETE FROM campaign_events"].delete
    db.from(:sqlite_sequence).where(name:"campaign_events").delete
end

def delete_campaigns
    db["DELETE FROM campaigns"].delete
    db.from(:sqlite_sequence).where(name:"campaigns").delete
end

def delete_clients
    db["DELETE FROM clients"].delete
    db.from(:sqlite_sequence).where(name:"clients").delete
end

def delete_events
    db["DELETE FROM events"].delete
    db.from(:sqlite_sequence).where(name:"events").delete
end

def delete_ips
    db["DELETE FROM ips"].delete
    db.from(:sqlite_sequence).where(name:"ips").delete
end

def delete_operating_systems
    db["DELETE FROM operating_systems"].delete
    db.from(:sqlite_sequence).where(name:"operating_systems").delete
end

def delete_payloads
    db["DELETE FROM payloads"].delete
    db.from(:sqlite_sequence).where(name:"payloads").delete
end

def delete_screen_resolutions
    db["DELETE FROM screen_resolutions"].delete
    db.from(:sqlite_sequence).where(name:"screen_resolutions").delete
end

def delete_web_browsers
    db["DELETE FROM web_browsers"].delete
    db.from(:sqlite_sequence).where(name:"web_browsers").delete
end
