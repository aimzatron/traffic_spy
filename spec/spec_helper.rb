ENV['TRAFFIC_SPY_ENV'] ||= "test"
require 'simplecov'

SimpleCov.start do
  add_filter "spec"
	add_filter "lib/traffic_spy/models/base.rb"
	add_filter "lib/traffic_spy/server.rb"
end

require 'traffic_spy'

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  #Wrap each test in transaction and raise an error so it rolls back
  config.around(:each) do |example|
    TrafficSpy::DB.transaction do
      example.run
      raise Sequel::Rollback
    end
  end

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def app
  TrafficSpy::Server
end

def db
  TrafficSpy::DB
end

def clients_table
    db.from(:clients)
end

def campaigns_table
    db.from(:campaigns)
end

def campaign_events_table
    db.from(:campaign_events)
end

def events_table
    db.from(:events)
end

def ips_table
    db.from(:ips)
end

def operating_systems_table
    db.from(:operating_systems)
end

def payloads_table
    db.from(:payloads)
end

def screen_resolutions_table
    db.from(:screen_resolutions)
end

def urls_table
    db.from(:urls)
end

def web_browsers_table
    db.from(:web_browsers)
end

def add_dummy_payload values
  default_values =
    { url: "http://jumpstartlab.com/blog",
      requestedAt:"2013-02-16 21:38:28 -0700",
      respondedIn:37,
      referredBy:"http://jumpstartlab.com",
      requestType:"GET",
      parameters:[],
      eventName: "socialLogin",
      userAgent:"Mozilla/5.0 (Macintosh%3B Intel Mac OS X 10_8_2) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1309.0 Safari/537.17",
      resolutionWidth:"1920",
      resolutionHeight:"1280",
      ip:"63.29.38.211" }

  params = default_values.merge values

  TrafficSpy::Payload.create(params).save
end
